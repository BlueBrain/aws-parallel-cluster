Region: us-east-1
Image:
  Os: alinux2
  CustomAmi: ami-01df237b945ab7147
HeadNode:
  InstanceType: t3.micro
  Networking:
    SubnetId: subnet-076ece71c00742d3c # compute
    SecurityGroups:
    - sg-0b5941ba4f4d1a9ff # sbo-poc-compute / hpc
  Ssh:
    KeyName: aws_coreservices
  Iam:
    S3Access:
      - BucketName: sboinfrastructureassets
  CustomActions:
    OnNodeStart:
      Sequence:
        - Script: s3://sboinfrastructureassets/scripts/create_users.py
          Args:
            - /compute-efs/users.json
        - Script: s3://sboinfrastructureassets/scripts/all_or_nothing_allocation.sh
    OnNodeConfigured:
      Sequence:
        - Script: s3://sboinfrastructureassets/scripts/setup_lustre_directories.py
          Args:
            - /compute-efs/users.json
            - /sbo/lustre
Scheduling:
  Scheduler: slurm
  SlurmQueues:
  - Name: debug # for testing purposes
    AllocationStrategy: lowest-price
    ComputeResources:
    - Name: t3micro
      Instances:
      - InstanceType: t3.micro
      MinCount: 0
      MaxCount: 8
    Networking:
      SubnetIds:
      - subnet-076ece71c00742d3c # compute
      SecurityGroups:
      - sg-0b5941ba4f4d1a9ff # sbo-poc-compute / hpc
    Iam:
      S3Access:
        - BucketName: sboinfrastructureassets
    CustomActions:
      OnNodeStart:
        Sequence:
          - Script: s3://sboinfrastructureassets/scripts/create_users.py
            Args:
              - /compute-efs/users.json
  - Name: prod-mpi # for benchmarking
    AllocationStrategy: lowest-price
    ComputeResources:
    - Name: cpu
      Instances:
      - InstanceType: c5n.metal # compute optimized nodes
      MinCount: 0
      MaxCount: 30 # upper limit for largest PoC case defined in cost estimation sheet
      Efa: # low-latency, high BW network
        Enabled: true # https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa-start.html#efa-start-security
    - Name: nvme
      Instances:
      - InstanceType: c5d.metal # provides additionally nvme support
      MinCount: 0
      MaxCount: 2 # upper limit for functionalizer use-case defined in cost estimation sheet
      Efa:
        Enabled: false
    Networking:
      PlacementGroup: # try to place nodes close to each other
        Enabled: true
      SubnetIds:
      - subnet-076ece71c00742d3c # compute
      SecurityGroups:
      - sg-0184e34d690eddb22 # sbo-poc-compute / hpc_efa
    Iam:
      S3Access:
        - BucketName: sboinfrastructureassets
    CustomActions:
      OnNodeStart:
        Sequence:
          - Script: s3://sboinfrastructureassets/scripts/create_users.py
            Args:
              - /compute-efs/users.json
  - Name: prod-batch # for benchmarking
    AllocationStrategy: lowest-price
    ComputeResources:
    - Name: cpu
      Instances:
      - InstanceType: m5.8xlarge # general purpose nodes
      MinCount: 0
      MaxCount: 50 # upper limit for largest PoC case defined in cost estimation sheet
      Efa: # low-latency, high BW network
        Enabled: false # enable after security groups have been updated
                       # https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa-start.html#efa-start-security
    Networking:
      PlacementGroup: # try to place nodes close to each other
        Enabled: false
      SubnetIds:
      - subnet-076ece71c00742d3c # compute
      SecurityGroups:
      - sg-0b5941ba4f4d1a9ff # sbo-poc-compute / hpc
    Iam:
      S3Access:
        - BucketName: sboinfrastructureassets
    CustomActions:
      OnNodeStart:
        Sequence:
          - Script: s3://sboinfrastructureassets/scripts/create_users.py
            Args:
              - /compute-efs/users.json
  SlurmSettings:
    EnableMemoryBasedScheduling: true
Imds:
  ImdsSupport: v2.0
SharedStorage:
  - Name: Efs0
    StorageType: Efs
    MountDir: /compute-efs
    EfsSettings:
      FileSystemId: fs-0c2a2f3ad1b1beeca # sbo-poc-compute
  - Name: FsxLustre-Scratch
    StorageType: FsxLustre
    MountDir: /sbo/lustre
    FsxLustreSettings:
      DeploymentType: SCRATCH_2
      StorageCapacity: 2400  # Configure Lustre for 2.4TiB (it has to be a multiple of 2.4)
      DataCompressionType: LZ4  # Data compression for higher-throughput between OSSs <-> OSTs
